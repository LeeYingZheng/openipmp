
CONFIGURING LDAP PUBLISHERS
===========================

A good free LDAP server can be found at http://www.openldap.org/
 
A Publisher is a session bean that implements the IPublishSession interface and
is used to store certificates and CRLs for entities.
EJBCA have support for endless number of publishers. Simply by deploying session
beans (PublisherSession1, PublisherSession2, ...) on the application server. The
user of EJBCA can implement own publishers, but EJBCA already comes with  a
publisher for LDAP.

To configure the publisher for LDAP:
By default the LDAP publisher is not enabled. To deploy the LDAP Publisher
session bean, uncomment the section for the session bean 'PublisherSession1' in
'ca/META-INF/ejb-jar.xml'.
 
      <!-- Uncomment to use LDAP Publisher
      <session>
        <ejb-name>PublisherSession1</ejb-name>
        <home>se.anatom.ejbca.ca.store.IPublisherSessionHome</home>
        <remote>se.anatom.ejbca.ca.store.IPublisherSessionRemote</remote>
        <ejb-class>se.anatom.ejbca.ca.store.LDAPPublisherSessionBean</ejb-class>
        <session-type>Stateless</session-type>
        <transaction-type>Container</transaction-type>

        <env-entry>
     	   <description>LDAP host</description>
     	   <env-entry-name>ldapHost</env-entry-name>
     	   <env-entry-type>java.lang.String</env-entry-type>
     	   <env-entry-value>localhost</env-entry-value>
        </env-entry>
     ...snip! removed text...
     </session>
     END LDAP Publisher section -->

Also uncomment the section for method permissions for the
same session bean.

     <!-- Uncomment for LDAP Publisher
     <method>
         <ejb-name>PublisherSession1</ejb-name>
         <method-name>*</method-name>
     </method>
     -->

This will configure an LDAPPublisherSession so be deployed as
'PublisherSession1', which will be found by the CA.

'PublisherSession1' must be configured to match your LDAP server.

Parameters to LDAP Publisher:

- ldapHost is the host where the LDAP server is located.

- ldapPort is the port on which the LDAP server listens (SSL is not yet
supported).

- loginDN is the DN of a user on the LDAP server with permissions to add and
update enties.

- loginPassword is the password for the user above.

- containerName is a definition of the domain of DNs that can be published on
this LDAP sever. If containerName is 'o=AnaTom,c=SE' only DNs belonging to this
o and c can be published. Several LDAP publishers can be deployed with different
containerName is you CA will issue certificates for multiple comains.
conatinerName can also be for example 'c=SE'.

- userObjectClass is the objectclass for the LDAP entries for users, where user
certificates are published. This objectclass must allow the attribute
'userCertificate;binary'.

- cAObjectClass is the objectclass for the LDAP entries for CAs, where CA
certificates and CRLs are published. This objectclass must allow the attributes
'cACertificate;binary' and 'certificateRevocationList;binary'.
